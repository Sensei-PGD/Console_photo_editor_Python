from PIL import Image  # –±–∏–±–ª–∏–æ—Ç–µ–∫–∞ –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏–π
import re              # –±–∏–±–ª–∏–æ—Ç–µ–∫–∞ —Ä–µ–≥—É–ª—è—Ä–Ω—ã—Ö –≤—ã—Ä–∞–∂–µ–Ω–∏–π
from filters import Red_Filter, Green_Filter, Blue_Filter, Gray_Filter, Vintage_Filter, Inversion_Filter, Blur_Filter, \
    Brightness_Filter, Turn_90_Filter, Turn_180_Filter, Turn_270_Filter, Mirror_Filter, Detecting_Boundaries_Filter,   \
    Detecting_Boundaries_2_Filter, Detecting_Boundaries_White_Filter, Black_White_Filter  # –∏–º–ø–æ—Ä—Ç —Ñ–∞–π–ª–∞ –∏ –µ–≥–æ —Ñ–∏–ª—å—Ç—Ä–æ–≤


def main():
    print("–î–æ–±—Ä–æ –ø–æ–∂–∞–ª–æ–≤–∞—Ç—å –≤ –∫–æ–Ω—Å–æ–ª—å–Ω—ã–π —Ñ–æ—Ç–æ—Ä–µ–¥–∞–∫—Ç–æ—Ä.")

    # –ó–∞–ø—Ä–æ—Å –ø—É—Ç–∏ –∫ –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏—é
    while True:
        # –ó–∞–ø—Ä–æ—Å –ø—É—Ç–∏ –∫ –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏—é
        print("‚ùï –ù–∞–ø–æ–º–∏–Ω–∞–Ω–∏–µ: –ø—É—Ç—å –∫ —Ñ–∞–π–ª—É –¥–æ–ª–∂–µ–Ω –ø—Ä–∏–º–µ—Ä–Ω–æ –≤—ã–≥–ª—è–¥–µ—Ç—å —Ç–∞–∫: G:/folder/sample.jpeg")
        image_path = input("–í–≤–µ–¥–∏—Ç–µ –ø—É—Ç—å –∫ —Ñ–∞–π–ª—É: ")

        try:
            # –û—Ç–∫—Ä—ã—Ç–∏–µ –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏—è –∏ –∫–æ–Ω–≤–µ—Ä—Ç–∞—Ü–∏—è –≤ —Ñ–æ—Ä–º–∞—Ç RGB
            image = Image.open(image_path).convert("RGB")
            break  # –ï—Å–ª–∏ —Ñ–∞–π–ª —É—Å–ø–µ—à–Ω–æ –æ—Ç–∫—Ä—ã—Ç, –≤—ã—Ö–æ–¥–∏–º –∏–∑ —Ü–∏–∫–ª–∞
        except IOError:
            print("\n‚ùå –û—à–∏–±–∫–∞: –Ω–µ —É–¥–∞–ª–æ—Å—å –æ—Ç–∫—Ä—ã—Ç—å —Ñ–∞–π–ª.")
            print("–ü–æ–ø—Ä–æ–±—É–π—Ç–µ –∑–∞–Ω–æ–≤–æ –≤–≤–µ—Å—Ç–∏ –ø—É—Ç—å –∫ —Ñ–∞–π–ª—É.")

    while True:
        # –í—ã–≤–æ–¥ –º–µ–Ω—é —Ñ–∏–ª—å—Ç—Ä–æ–≤
        print("\n–ú–µ–Ω—é —Ñ–∏–ª—å—Ç—Ä–æ–≤:")
        print("1: –ö—Ä–∞—Å–Ω—ã–π —Ñ–∏–ª—å—Ç—Ä")
        print("2: –ó–µ–ª—ë–Ω—ã–π —Ñ–∏–ª—å—Ç—Ä")
        print("3: –°–∏–Ω–∏–π —Ñ–∏–ª—å—Ç—Ä")
        print("4: –°–µ—Ä—ã–π —Ñ–∏–ª—å—Ç—Ä")
        print("5: –ö–æ—Ä–∏—á–Ω–µ–≤—ã–π —Ñ–∏–ª—å—Ç—Ä")
        print("6: –ò–Ω–≤–µ—Ä—Å–∏—è")
        print("7: –§–∏–ª—å—Ç—Ä —Ä–∞–∑–º—ã—Ç–∏—è")
        print("8: –§–∏–ª—å—Ç—Ä —è—Ä–∫–æ—Å—Ç–∏")
        print("9: –§–∏–ª—å—Ç—Ä –ø–µ—Ä–µ–≤–æ—Ä–æ—Ç–∞ –Ω–∞ 90¬∞")
        print("10: –§–∏–ª—å—Ç—Ä –ø–µ—Ä–µ–≤–æ—Ä–æ—Ç–∞ –Ω–∞ 180¬∞")
        print("11: –§–∏–ª—å—Ç—Ä –ø–µ—Ä–µ–≤–æ—Ä–æ—Ç–∞ –Ω–∞ 270¬∞")
        print("12: –ó–µ—Ä–∫–∞–ª—å–Ω—ã–π —Ñ–∏–ª—å—Ç—Ä")
        print("13: –§–∏–ª—å—Ç—Ä –æ–±–Ω–∞—Ä—É–∂–µ–Ω–∏—è –≥—Ä–∞–Ω–∏—Ü")
        print("14: –§–∏–ª—å—Ç—Ä –æ–±–Ω–∞—Ä—É–∂–µ–Ω–∏—è –≥—Ä–∞–Ω–∏—Ü —Å–æ —Å–≥–ª–∞–∂–∏–≤–∞–Ω–∏–µ–º")
        print("15: –§–∏–ª—å—Ç—Ä –æ–±–Ω–∞—Ä—É–∂–µ–Ω–∏—è –≥—Ä–∞–Ω–∏—Ü –Ω–∞ –±–µ–ª–æ–º —Ñ–æ–Ω–µ")
        print("16: –ß—ë—Ä–Ω–æ-–±–µ–ª—ã–π —Ñ–∏–ª—å—Ç—Ä")
        print("0: –í—ã—Ö–æ–¥")

        # –í—ã–±–æ—Ä —Ñ–∏–ª—å—Ç—Ä–∞
        choice = input("\n–í—ã–±–µ—Ä–∏—Ç–µ —Ñ–∏–ª—å—Ç—Ä (–∏–ª–∏ 0 –¥–ª—è –≤—ã—Ö–æ–¥–∞): ")

        if choice == "0":
            print("\n–î–æ —Å–≤–∏–¥–∞–Ω–∏—è! üëã")
            break

        if choice == "1":
            filter_class = Red_Filter
        elif choice == "2":
            filter_class = Green_Filter
        elif choice == "3":
            filter_class = Blue_Filter
        elif choice == "4":
            filter_class = Gray_Filter
        elif choice == "5":
            filter_class = Vintage_Filter
        elif choice == "6":
            filter_class = Inversion_Filter
        elif choice == "7":
            filter_class = Blur_Filter
        elif choice == "8":
            filter_class = Brightness_Filter
        elif choice == "9":
            filter_class = Turn_90_Filter
        elif choice == "10":
            filter_class = Turn_180_Filter
        elif choice == "11":
            filter_class = Turn_270_Filter
        elif choice == "12":
            filter_class = Mirror_Filter
        elif choice == "13":
            filter_class = Detecting_Boundaries_Filter
        elif choice == "14":
            filter_class = Detecting_Boundaries_2_Filter
        elif choice == "15":
            filter_class = Detecting_Boundaries_White_Filter
        elif choice == "16":
            filter_class = Black_White_Filter
        else:
            print("\n‚ùó –ù–µ–≤–µ—Ä–Ω—ã–π –≤—ã–±–æ—Ä —Ñ–∏–ª—å—Ç—Ä–∞! –ü–æ–≤—Ç–æ—Ä–∏—Ç–µ –µ—â—ë —Ä–∞–∑")
            continue

        # –°–æ–∑–¥–∞–Ω–∏–µ —ç–∫–∑–µ–º–ø–ª—è—Ä–∞ —Ñ–∏–ª—å—Ç—Ä–∞
        filter_instance = filter_class()

        # –û–ø–∏—Å–∞–Ω–∏–µ —Ñ–∏–ª—å—Ç—Ä–∞
        print("\n" + filter_instance.name + ":")
        print(filter_instance.description)

        # –ü—Ä–∏–º–µ–Ω–µ–Ω–∏–µ —Ñ–∏–ª—å—Ç—Ä–∞
        while True:
            apply_filter = input("\n–ü—Ä–∏–º–µ–Ω–∏—Ç—å —Ñ–∏–ª—å—Ç—Ä –∫ –∫–∞—Ä—Ç–∏–Ω–∫–µ? (–î–∞/–ù–µ—Ç): ")
            if apply_filter.lower() == "–¥–∞" or apply_filter.lower() == "–Ω–µ—Ç":
                break
            else:
                print("\n‚ùó –ù–µ–≤–µ—Ä–Ω—ã–π –≤—ã–±–æ—Ä! –ü–æ–≤—Ç–æ—Ä–∏—Ç–µ –µ—â—ë —Ä–∞–∑.")

        if apply_filter.lower() == "–¥–∞":
            filtered_image = filter_instance.apply(image)

            # –°–æ—Ö—Ä–∞–Ω–µ–Ω–∏–µ –æ–±—Ä–∞–±–æ—Ç–∞–Ω–Ω–æ–≥–æ –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏—è
            print("‚ùï –ù–∞–ø–æ–º–∏–Ω–∞–Ω–∏–µ: –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏–µ —Å–æ—Ö—Ä–∞–Ω—è–µ—Ç—Å—è –≤ –≤—ã–±–∏—Ä–∞–µ–º—É—é –¥–∏—Ä–µ–∫—Ç–æ—Ä–∏—é (–≤ —Ñ–∞–π–ª üìÑ, primer.*).")
            while True:
                savepath = input("\n–ö—É–¥–∞ —Å–æ—Ö—Ä–∞–Ω–∏—Ç—å: ")
                if not re.match(r'^[a-zA-Z]', savepath):
                    print("\n‚ùó –ù–µ–∫–æ—Ä—Ä–µ–∫—Ç–Ω—ã–π –≤–≤–æ–¥! –ü–æ–ø—Ä–æ–±—É–π—Ç–µ —Å–Ω–æ–≤–∞.")
                    continue
                try:
                    with open(savepath):  # –û—Ç–∫—Ä—ã–≤–∞–µ–º —Ñ–∞–π–ª –¥–ª—è –∑–∞–ø–∏—Å–∏, —á—Ç–æ–±—ã –ø—Ä–æ–≤–µ—Ä–∏—Ç—å –µ–≥–æ –¥–æ—Å—Ç—É–ø–Ω–æ—Å—Ç—å
                        break
                except IOError:
                    print("\n‚ùó –ù–µ–∫–æ—Ä—Ä–µ–∫—Ç–Ω—ã–π –≤–≤–æ–¥! –ü–æ–ø—Ä–æ–±—É–π—Ç–µ —Å–Ω–æ–≤–∞.")
                    continue
            try:
                filtered_image.save(savepath)
                print("\n‚úî –ò–∑–æ–±—Ä–∞–∂–µ–Ω–∏–µ —É—Å–ø–µ—à–Ω–æ —Å–æ—Ö—Ä–∞–Ω–µ–Ω–æ.")

            except FileNotFoundError:
                print("\n‚ùå –û—à–∏–±–∫–∞: –Ω–µ —É–¥–∞–ª–æ—Å—å —Å–æ—Ö—Ä–∞–Ω–∏—Ç—å —Ñ–∞–π–ª.")

        # –û–±—Ä–∞–±–æ—Ç–∫–∞ –¥—Ä—É–≥–æ–≥–æ –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏—è –∏–ª–∏ –∑–∞–≤–µ—Ä—à–µ–Ω–∏–µ —Ä–∞–±–æ—Ç—ã –ø—Ä–æ–≥—Ä–∞–º–º—ã
        while True:
            repeat = input("\n‚ùî –ï—â—ë —Ä–∞–∑? (–î–∞/–ù–µ—Ç): ")
            if repeat.lower() == "–¥–∞" or repeat.lower() == "–Ω–µ—Ç":
                break
            else:
                print("\n‚ùó –ù–µ–∫–æ—Ä—Ä–µ–∫—Ç–Ω—ã–π –≤–≤–æ–¥! –ü–æ–ø—Ä–æ–±—É–π—Ç–µ —Å–Ω–æ–≤–∞.")

        if repeat.lower() == "–Ω–µ—Ç":
            print("\n–î–æ —Å–≤–∏–¥–∞–Ω–∏—è! üëã")
            break


if __name__ == "__main__":
    main()
